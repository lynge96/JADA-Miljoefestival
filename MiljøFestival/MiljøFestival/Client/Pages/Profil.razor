@page "/profil"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject Client.Shared.LogedIn LogedIn


<h1>Proil for bruger:</h1>

@if (bruger == null)
{
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
}
else if (LogedIn.LoggetPå == true)
{
    <p>Bruger_Id: @bruger.Bruger_Id</p>
    <p>HashPwd: @bruger.Kode</p>

    <div class="profilContainer col-md-6">

        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingFornavn" @bind="bruger.Fornavn">
            <label for="floatingFornavn">Fornavn</label>
        </div>

        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingEfternavn" @bind="bruger.Efternavn">
            <label for="floatingEfternavn">Efternavn</label>
        </div>

        <div class="form-floating mb-3">
            <input type="tel" class="form-control" id="floatingTelefon" @bind="bruger.Telefon">
            <label for="floatingTelefon">Telefon</label>
        </div>

        <div class="form-floating mb-3">
            <input type="email" class="form-control" id="floatingInput" @bind="bruger.Email">
            <label for="floatingInput">Email adresse</label>
        </div>

        <div class="form-floating">
              <input type="password" class="form-control" id="floatingPassword" @bind-value="bruger.Kode">
              <label for="floatingPassword">Password</label>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" @bind="bruger.Koordinator">
            <label class="form-check-label" for="flexCheckDefault">
            Koordinator
            </label>
        </div>

        <div class="d-grid gap-2 col-6 mx-auto">
          <button class="btn btn-primary" type="button" @onclick="() => OpdaterBruger(bruger)">Gem ændringer <i class="bi bi-check-circle-fill"></i></button>
        </div>

    </div>

} else
{
    <p>Log på for at se og redigere din profil</p>
}

@code {
    private Bruger bruger = new Bruger();

    protected override async Task OnInitializedAsync()
    {
        if (LogedIn.LoggetPå == true)
        {
            var brugerListe = await Http.GetFromJsonAsync<IEnumerable<Bruger>>($"Bruger/findBrugerId?bruger_id={LogedIn.Bruger_Id}");

            bruger = brugerListe.First();
        }
    }

    protected async Task OpdaterBruger(Bruger bruger)
    {
        await Http.PostAsJsonAsync<Bruger>("Bruger/opdaterBruger", bruger);

        await OnInitializedAsync();

    }



}