@page "/koordinatorVagtOpgave"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger LogedInBruger

@if (opgaveListe == null)
{
    <p><em>Loading...</em></p>
}
else if (!LogedInBruger.ErKoordinator())
{
    <p><em>Du skal være koordinator for at se denne side</em></p>
}
else if (LogedInBruger.ErLoggetPå())
{

<div class="row">
    <div class="opretvagtContainer col-md-6">
        <h1>Opret vagt</h1>
        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingStartdato" @bind="nyVagt.Start">
            <label for="floatingStartdato">Start</label>
        </div>
        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingSlutdato" @bind="nyVagt.Slut">
            <label for="floatingSlutdato">Slut</label>
        </div>
        <div class="form-group">
            <label for="exampleFormControlSelect1">Antal Vagter</label>
            <select class="form-control" @bind="antalVagter">
                <option selected>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
            </select>
        </div>
        <div class="form-group">
            <label for="exampleFormControlSelect1">Opgave Type </label>
            <select class="form-control" @bind="nyVagt.Opgave_Navn">
                <option selected>Vælg en opgave...</option>
                @foreach (var item in opgaveListe)
                {
                    <option>@item.Type</option>
                }
            </select>
        </div>
        <div class="d-grid gap-2 col-6 mx-auto">
            <button class="btn btn-primary" type="button" @onclick="() => OpretVagt(nyVagt)">Opret vagt<i class="bi bi-check-circle-fill"></i></button>
        </div>
    </div>
    <div class="opretopgaveContainer col-md-6">
        <h1>Opret opgave</h1>
        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingType" @bind="nyOpgave.Type">
            <label for="floatingType">Opgave navn</label>
        </div>
        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingBeskrivelse" @bind="nyOpgave.Beskrivelse">
            <label for="floatingBeskrivelse">Opgave beskrivelse</label>
        </div>
        <div class="form-group">
            <label for="exampleFormControlSelect1">Start status:</label>
            <select class="form-control" @bind="nyOpgave.Status">
                <option selected>Vælg en status...</option>
                <option>Planlægning</option>
                <option>I udførelse</option>
                <option>Udført</option>
            </select>
        </div>
        <div class="d-grid gap-2 col-6 mx-auto">
            <button class="btn btn-primary" type="button" @onclick="() => OpretOpgave(nyOpgave)">Opret opgave<i class="bi bi-check-circle-fill"></i></button>
        </div>
    </div>
</div>
}
else
{
    <p><em>Du skal være logget på for at kunne se denne side!</em></p>
}



@code {
    private Vagt nyVagt = new Vagt();

    private Opgave nyOpgave = new Opgave();

    private List<Opgave> opgaveListe;
    private int antalVagter = 1;

    protected async Task OpretVagt(Vagt vagt)
    {
        Opgave valgteOpgave = new Opgave();

        valgteOpgave = opgaveListe.Find(q => q.Type == vagt.Opgave_Navn);

        vagt.Opgave_Id = valgteOpgave.Opgave_Id;

        for (int i = 1; i <= antalVagter; i++)
        {
            await Http.PostAsJsonAsync<Vagt>("Vagt/opret", vagt);
        }

        nyVagt = new Vagt();
        antalVagter = 1;
        nyVagt.Opgave_Navn = "Vælg en opgave...";

    }

    protected async Task OpretOpgave(Opgave opgave)
    {
        await Http.PostAsJsonAsync<Opgave>("Opgave/opret", opgave);

        nyOpgave.Type = string.Empty;
        nyOpgave.Beskrivelse = string.Empty;
        nyOpgave.Status = "Vælg en status...";

        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        opgaveListe = await Http.GetFromJsonAsync<List<Opgave>>("Opgave/all");
    }
}