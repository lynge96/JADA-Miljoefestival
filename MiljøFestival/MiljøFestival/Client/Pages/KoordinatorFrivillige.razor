@page "/koordinatorfrivillige"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger LogedInBruger

<h1>Overblik over alle brugere</h1>

@if (brugerListeUnsorted == null)
{
    <p><em>Loading...</em></p>
}
else if (!LogedInBruger.ErKoordinator())
{
    <p><em>Du skal være koordinator for at se denne side</em></p>
}
else if (LogedInBruger.ErLoggetPå())
{
    <h1>Formand</h1>
    <div class="table-responsive rounded">
        <table class="table table-striped">
            <thead>
                <tr class="table">
                    <th>Navn</th>
                    <th>Email</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bruger in formandListe)
                {
                    <tr>
                        <td>@bruger.Fornavn @bruger.Efternavn</td>
                        <td>@bruger.Email</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <h1>Frivillige</h1>
    <div class="table-responsive rounded">
        <table class="table table-striped">
            <thead>
                <tr class="table">
                    <th>Bruger ID</th>
                    <th>Navn</th>
                    <th>Telefon</th>
                    <th>Email</th>
                    <th>Adresse</th>
                    <th>Team</th>
                    <th>Opdater</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bruger in frivilligListe)
                {
                    <tr>
                        <td>@bruger.Bruger_Id</td>
                        <td>@bruger.Fornavn @bruger.Efternavn</td>
                        <td>@bruger.Telefon</td>
                        <td>@bruger.Email</td>
                        <td>@bruger.Adresse</td>
                        <td>
                            <select class="form-control" @bind="bruger.Team">
                                @foreach (var team in teams)
                                {
                                    <option value="@team" selected=@(bruger.Team == team)>@team</option>
                                }
                            </select>
                        </td>
                        <td>
                            <button class="btn btn-primary" @onclick="()=>OpdaterBruger(bruger)">Opdater</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <h1>Koordinatorer</h1>
    <div class="table-responsive rounded">
        <table class="table table-striped">
            <thead>
                <tr class="table">
                    <th>Bruger ID</th>
                    <th>Navn</th>
                    <th>Telefon</th>
                    <th>Email</th>
                    <th>Adresse</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bruger in koordinatorListe)
                {
                    <tr>
                        <td>@bruger.Bruger_Id</td>
                        <td>@bruger.Fornavn @bruger.Efternavn</td>
                        <td>@bruger.Telefon</td>
                        <td>@bruger.Email</td>
                        <td>@bruger.Adresse</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<Bruger> frivilligListe;
    private List<Bruger> koordinatorListe;
    private List<Bruger> brugerListeUnsorted;
    private List<Bruger> formandListe;
    private List<string> teams = new List<string>();


    protected override async Task OnInitializedAsync()
    {
        brugerListeUnsorted = await Http.GetFromJsonAsync<List<Bruger>>("Bruger/all");
        frivilligListe = brugerListeUnsorted.FindAll(q => q.Rolle_Id == 2).OrderBy(q => q.Team).ToList();
        koordinatorListe = brugerListeUnsorted.FindAll(q => q.Rolle_Id == 1);
        formandListe = brugerListeUnsorted.FindAll(q => q.Rolle_Id == 3);
        teams = await Http.GetFromJsonAsync<List<string>>("Team/all");
    }


    protected async Task OpdaterBruger(Bruger bruger)
    {
        await Http.PostAsJsonAsync<Bruger>("Bruger/opdaterFrivillig", bruger);

        await OnInitializedAsync();
    }
}
}