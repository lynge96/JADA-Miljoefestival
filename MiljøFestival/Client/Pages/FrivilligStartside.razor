@page "/frivilligStartside"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger LogedInBruger

@if (VagtListe == null)
{
    <p><em>Loading...</em></p>
}
else if (LogedInBruger.ErKoordinator())
{
    <p><em>Du skal være frivillig for at se denne side</em></p>
}
else if (LogedInBruger.ErLoggetPå())
{
    <div class="table-responsive rounded">
        <table class="table table-striped">
            <thead>
                <tr class="table">
                    <th>Dato</th>
                    <th>Start</th>
                    <th>Slut</th>
                    <th>Opgave</th>
                    <th>Beskrivelse</th>
                    <th>Frigiv vagt</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vagt in VagtListe)
                {
                    <tr>
                        <td>@vagt.Start.ToShortDateString()</td>
                        <td>@vagt.Start.ToShortTimeString()</td>
                        <td>@vagt.Slut.ToShortTimeString()</td>
                        <td>@vagt.Opgave</td>
                        <td>@vagt.Beskrivelse</td>
                        
                            <td><input type="button" class="btn btn-danger" value="Frigiv" @onclick="() => FrigivVagt(vagt)"></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p><em>Log in for at se dine vagter</em></p>
}

@code {
    private List<Vagt> VagtListe;
    private List<Vagt> VagtListeUnsorted;

    protected override async Task OnInitializedAsync()
    {
        VagtListeUnsorted = await Http.GetFromJsonAsync<List<Vagt>>($"Vagt/brugerVagter?brugerid={LogedInBruger.Bruger_Id}");

        VagtListe = VagtListeUnsorted.OrderBy(q => q.Vagt_Id).ToList();

    }

    // Sletter vagt, sætter bruger_id til null og henter vagtlisten igen
    protected async Task FrigivVagt(Vagt vagt)
    {
        await Http.PostAsJsonAsync<Vagt>("Vagt/frigivVagt", vagt);

        await OnInitializedAsync();
    }


    // Henter vagtstatus
    protected async Task<IEnumerable<string>> HentStatus(int vagt_id)
    {
        return await Http.GetFromJsonAsync<IEnumerable<string>>($"vagt/vagtStatus?vagt_id={vagt_id}");
    }
}
