@page "/frivilligStartside"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger loggedInBruger

@if (vagtListe == null)
{
    <p><em>Loading...</em></p>
}
else if (loggedInBruger.ErKoordinator())
{
    <p><em>Du skal være frivillig for at se denne side</em></p>
}
else if (loggedInBruger.ErLoggetPå())
{
    <div class="col-md-6 mx-auto">

        <h1 class="display-4">Dashboard</h1>
        <p class="lead">
            Hej @loggedInBruger.Fornavn, her kan du se en oversigt over alle dine nuværende vagter.
        </p>

        <div class="table-responsive rounded mt-4">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Dato</th>
                        <th scope="col">Start</th>
                        <th scope="col">Slut</th>
                        <th scope="col">Opgave</th>
                        <th scope="col">Beskrivelse</th>
                        <th scope="col">Frigiv vagt</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var vagt in vagtListe)
                    {
                        <tr>
                            <th scope="row">@vagt.Start.ToShortDateString()</th>
                            <td>@vagt.Start.ToShortTimeString()</td>
                            <td>@vagt.Slut.ToShortTimeString()</td>
                            <td>@vagt.Opgave</td>
                            <td>@vagt.Beskrivelse</td>                       
                            <td><input type="button" class="btn btn-danger" value="Frigiv" @onclick="() => FrigivVagt(vagt)"></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <div class="alert alert-info col-md-3 mx-auto">
        <span class="oi oi-account-login" aria-hidden="true"></span>
        <strong> Hov!</strong> <a href="/login">Log in</a> for at se dine vagter!
    </div>

}

@code {
    private List<Vagt> vagtListe;
    private List<Vagt> vagtListeUnsorted;

    protected override async Task OnInitializedAsync()
    {
        vagtListeUnsorted = await Http.GetFromJsonAsync<List<Vagt>>($"Vagt/brugerVagter?brugerid={loggedInBruger.Bruger_Id}");

        vagtListe = vagtListeUnsorted.OrderBy(q => q.Vagt_Id).ToList();

    }

    // Sletter vagt, sætter bruger_id til null og henter vagtlisten igen
    protected async Task FrigivVagt(Vagt vagt)
    {
        await Http.PutAsJsonAsync<Vagt>("Vagt/frigivVagt", vagt);

        await OnInitializedAsync();
    }
    
    // Henter vagtstatus
    protected async Task<IEnumerable<string>> HentStatus(int vagt_id)
    {
        return await Http.GetFromJsonAsync<IEnumerable<string>>($"vagt/vagtStatus?vagt_id={vagt_id}");
    }

}
