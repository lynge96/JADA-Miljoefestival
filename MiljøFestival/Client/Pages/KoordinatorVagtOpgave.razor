@page "/koordinatorVagtOpgave"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger loggedInBruger

@if (opgaveListe == null)
{
    <p><em>Loading...</em></p>
}
else if (!loggedInBruger.ErKoordinator() && !loggedInBruger.ErFormand())
{
    <p><em>Du skal være koordinator for at se denne side</em></p>
}
else if (loggedInBruger.ErLoggetPå())
{

    <div class="row">
        <div class="opretvagtContainer col-md-6">
            <h1>Opret vagt</h1>
            <div class="form-floating mb-3">
                <input type="datetime" class="form-control" id="floatingStartdato" @bind="nyVagt.Start">
                <label for="floatingStartdato">Start</label>
            </div>
            <div class="form-floating mb-3">
                <input type="datetime" class="form-control" id="floatingSlutdato" @bind="nyVagt.Slut">
                <label for="floatingSlutdato">Slut</label>
            </div>
            <div class="form-group">
                <label for="exampleFormControlSelect1">Antal Vagter</label>
                <select class="form-select" @bind="antalVagter">
                    <option selected>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                </select>
            </div>
            <div class="form-group">
                <label for="exampleFormControlSelect1">Opgave Type </label>
                <select class="form-select" @bind="nyVagt.Opgave">
                    <option selected>Vælg en opgave...</option>
                    @foreach (var item in opgaveListe)
                    {
                        <option>@item.Navn</option>
                    }
                </select>
            </div>
            @if (feedbackVagt == "Fejl!")
            {

                <div class="alert alert-warning">
                    <span class="bi bi-key" aria-hidden="true"></span>
                    <strong>Hov!</strong> - Udfyld alle felterne inden du trykker opret
                </div>

            }
            else if (feedbackVagt == "Succes!")
            {
                <div class="alert alert-success">
                    <span class="bi bi-key" aria-hidden="true"></span>
                    <strong>Succes!</strong> - Vagt(er) er nu oprettet
                </div>
            }
            <div class="d-grid gap-2 col-6 mx-auto">
                <button class="btn btn-primary" type="button" @onclick="() => OpretVagt(nyVagt)">Opret vagt</button>
            </div>
        </div>
        <div class="opretopgaveContainer col-md-6">
            <h1>Opret opgave</h1>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="floatingType" @bind="nyOpgave.Navn">
                <label for="floatingType">Opgave navn</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="floatingBeskrivelse" @bind="nyOpgave.Beskrivelse">
                <label for="floatingBeskrivelse">Opgave beskrivelse</label>
            </div>
            <div class="form-group">
                <label for="exampleFormControlSelect1">Start status:</label>
                <select class="form-select" @bind="nyOpgave.Status">
                    <option selected hdden >Vælg en status...</option>
                    @foreach (var status in status)
                    {
                        <option>@status</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="exampleFormControlSelect1">Start status:</label>
                <select class="form-select" @bind="nyOpgave.Team">
                    <option selected>Vælg et team...</option>
                    @foreach (var team in teams)
                    {
                        <option>@team</option>
                    }
                </select>
            </div>
            @if (feedbackOpgave == "Fejl!")
            {

                <div class="alert alert-warning">
                    <span class="bi bi-key" aria-hidden="true"></span>
                    <strong>Hov!</strong> - Udfyld alle felterne inden du trykker opret
                </div>

            }
            else if (feedbackOpgave == "Succes!")
            {
                <div class="alert alert-success">
                    <span class="bi bi-key" aria-hidden="true"></span>
                    <strong>Succes!</strong> - Opgave er nu oprettet
                </div>
            }
            <div class="d-grid gap-2 col-6 mx-auto">
                <button class="btn btn-primary" type="button" @onclick="() => OpretOpgave(nyOpgave)">Opret opgave</button>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Du skal være logget på for at kunne se denne side!</em></p>
}



@code {
    private Vagt nyVagt = new Vagt();
    private Opgave nyOpgave = new Opgave();
    private List<Opgave> opgaveListe;
    private int antalVagter = 1;
    private List<string> status;
    private List<string> teams;
    private string feedbackVagt = string.Empty;
    private string feedbackOpgave = string.Empty;





    protected async Task OpretVagt(Vagt vagt)
    {
        if (vagt.Opgave == null || vagt.Start == DateTime.Today || vagt.Slut == DateTime.Today)
        {
            feedbackVagt = "Fejl!";

            return;
        }
        else
        {
            Opgave valgteOpgave = new Opgave();

            valgteOpgave = opgaveListe.Find(q => q.Navn == vagt.Opgave);

            vagt.Opgave_Id = valgteOpgave.Opgave_Id;

            for (int i = 1; i <= antalVagter; i++)
            {
                await Http.PostAsJsonAsync<Vagt>("Vagt/opret", vagt);
            }

            nyVagt = new Vagt();
            antalVagter = 1;
            nyVagt.Opgave = "Vælg en opgave...";
            nyVagt.Start = DateTime.Today;
            nyVagt.Slut = DateTime.Today;

            feedbackVagt = "Succes!";
        }
    }

    protected async Task OpretOpgave(Opgave opgave)
    {
        if (opgave.Navn == null || opgave.Beskrivelse == null || opgave.Status == null || opgave.Team == null)
        {
            feedbackOpgave = "Fejl!";
        }
        else
        {
            await Http.PostAsJsonAsync<Opgave>("Opgave/opret", opgave);

            nyOpgave.Navn = string.Empty;
            nyOpgave.Beskrivelse = string.Empty;
            nyOpgave.Status = "Vælg en status...";
            nyOpgave.Team = "Vælg et team...";


            await OnInitializedAsync();

            feedbackOpgave = "Succes!";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        opgaveListe = await Http.GetFromJsonAsync<List<Opgave>>("Opgave/all");

        status = await Http.GetFromJsonAsync<List<string>>("Status/all");

        teams = await Http.GetFromJsonAsync<List<string>>("Team/all");

        nyVagt.Start = DateTime.Today;
        nyVagt.Slut = DateTime.Today;


    }
}