@page "/frivillige"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger loggedInBruger


@if (brugerListeUnsorted == null)
{
    <div class="d-flex justify-content-center">


        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (loggedInBruger.ErLoggetPå())
{
    <main class="col-md-7 mx-auto">

        <h1 class="display-4">Alle Frivillige</h1>

        <h2 class="mt-3">Formand</h2>

        <div class="table-responsive rounded">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Navn</th>
                        <th>Email</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var bruger in formandListe)
                    {
                        <tr>
                            <td>@bruger.Fornavn @bruger.Efternavn</td>
                            <td>@bruger.Email</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <h2 class="mt-3">Frivillige</h2>

        <div class="table-responsive rounded">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Navn</th>
                        <th>Telefon</th>
                        <th>Team</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var bruger in frivilligListe)
                    {
                        <tr>
                            <th class="col-md-1">@bruger.Bruger_Id</th>
                            <td class="col-md-4">@bruger.Fornavn @bruger.Efternavn</td>
                            <td class="col-md-4">@bruger.Telefon</td>
                            <td class="col-md-3">@bruger.Team</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <h2 class="mt-3">Koordinatorer</h2>

        <div class="table-responsive rounded">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Navn</th>
                        <th>Telefon</th>
                        <th>Team</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var bruger in koordinatorListe)
                    {
                        <tr>
                            <th class="col-md-1">@bruger.Bruger_Id</th>
                            <td class="col-md-4">@bruger.Fornavn @bruger.Efternavn</td>
                            <td class="col-md-4">@bruger.Telefon</td>
                            <td class="col-md-3">@bruger.Team</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </main>
}

@code {
    private List<Bruger> frivilligListe;
    private List<Bruger> koordinatorListe;
    private List<Bruger> formandListe;
    private List<Bruger> brugerListeUnsorted;
    private List<string> teams = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        brugerListeUnsorted = await Http.GetFromJsonAsync<List<Bruger>>("Bruger/all");

        frivilligListe = brugerListeUnsorted.FindAll(q => q.Rolle_Id == 2).OrderBy(q => q.Team).ToList();

        koordinatorListe = brugerListeUnsorted.FindAll(q => q.Rolle_Id == 1);

        formandListe = brugerListeUnsorted.FindAll(q => q.Rolle_Id == 3);

        teams = await Http.GetFromJsonAsync<List<string>>("Team/all");
    }
}