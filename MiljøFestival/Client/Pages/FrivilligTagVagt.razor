@page "/frivilligTagVagt"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger loggedInBruger

@if (VagtListe == null)
{
    <p><em>Loading...</em></p>
}
else if (loggedInBruger.ErKoordinator())
{
    <p><em>Du skal være frivillig for at se denne side</em></p>
}
else if (loggedInBruger.ErLoggetPå())
{
    <div class="col-md-6 mx-auto">

        <h1 class="display-4">Ledige vagter</h1>
        <p class="lead">Her er en liste over dine ledige vagter for dit team: @loggedInBruger.Team</p>

        <div class="table-responsive rounded mt-4">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Dato</th>
                        <th scope="col">Start</th>
                        <th scope="col">Slut</th>
                        <th scope="col">Opgave</th>
                        <th scope="col">Beskrivelse</th>
                        <th scope="col">Tag vagt</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var vagt in VagtListe)
                    {
                        <tr>
                            <td scope="row">@vagt.Start.ToShortDateString()</td>
                            <td>@vagt.Start.ToShortTimeString()</td>
                            <td>@vagt.Slut.ToShortTimeString()</td>
                            <td>@vagt.Opgave</td>
                            <td>@vagt.Beskrivelse</td>
                            <td><input type="button" class="btn btn-primary" value="Tag vagt" @onclick="() => TagVagt(vagt)"></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <p><em>Log in for at se ledige vagter</em></p>
}

@code {
    private List<Vagt> VagtListe;
    private List<Vagt> VagtListeUnsorted;

    // Henter alle ledige vagter (taget_af == null)
    protected override async Task OnInitializedAsync()
    {
        VagtListeUnsorted = await Http.GetFromJsonAsync<List<Vagt>>($"Vagt/ledigeVagter?team_id={loggedInBruger.Team_Id}");

        VagtListe = VagtListeUnsorted.OrderBy(q => q.Vagt_Id).ToList();
    }

    // Tager vagt og opdaterer ledige vagter
    private async Task TagVagt(Vagt vagt)
    {
        vagt.Bruger_Id = loggedInBruger.Bruger_Id;

        await Http.PutAsJsonAsync<Vagt>("Vagt/tagVagt", vagt);

        await OnInitializedAsync();
    }
}
