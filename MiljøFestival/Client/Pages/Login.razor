@page "/login"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject NavigationManager UriHelper
@inject NavigationManager NavManager
@inject MiljøFestival.Shared.Models.Bruger loggedInBruger

@if (!loggedInBruger.ErLoggetPå())
{
    <main class="form-signin col-md-3 m-auto">
        <div class="my-3 p-3">
            <form>
                <h1 class="text-center mb-4 display-4">Log ind</h1>
                <div class="form-floating mb-2">
                    <input type="email" class="form-control" id="floatingInput" placeholder="Email" @bind-value="bruger.Email" required>
                    <label for="floatingInput">Email adresse</label>
                </div>
                <div class="form-floating">
                    <input type="password" class="form-control" id="floatingPassword" placeholder="Password" @bind-value="bruger.Kode" required>
                    <label for="floatingPassword">Password</label>
                </div>
                <button class="w-100 btn btn-primary mt-3" type="button" @onclick="() => HandleSubmit()">Log ind</button>
                <p class="my-3 h6"><a class="nav-link text-decoration-underline" href="OpretBruger">Opret bruger</a></p>
                @if (feedback != string.Empty)
                {
                    <div class="alert alert-warning">
                        <span class="bi bi-lock-fill" aria-hidden="true"></span>
                        <strong>Hov!</strong> - @feedback
                    </div>
                }
            </form>
        </div>
    </main>
}
else
{
    <p>Du er allerede logget ind...</p>
}

@code {
    private Bruger bruger = new Bruger();
    private string feedback = string.Empty;


    private async Task HandleSubmit()
    {
        IEnumerable<Bruger> verificerBruger = await TjekLogin(bruger);

        if (verificerBruger.Count() > 0)
        {
            var brugerOplysninger = verificerBruger.First();

            var kompetencer = await HentKompetencer(brugerOplysninger);

            brugerOplysninger.Kompetencer = kompetencer.ToList();

            loggedInBruger.Bruger_Id = brugerOplysninger.Bruger_Id;
            loggedInBruger.Fornavn = brugerOplysninger.Fornavn;
            loggedInBruger.Efternavn = brugerOplysninger.Efternavn;
            loggedInBruger.Telefon = brugerOplysninger.Telefon;
            loggedInBruger.Email = brugerOplysninger.Email;
            loggedInBruger.Adresse = brugerOplysninger.Adresse;
            loggedInBruger.Rolle_Id = brugerOplysninger.Rolle_Id;
            loggedInBruger.Rolle = brugerOplysninger.Rolle;
            loggedInBruger.Team_Id = brugerOplysninger.Team_Id;
            loggedInBruger.Team = brugerOplysninger.Team;
            loggedInBruger.Kompetencer = brugerOplysninger.Kompetencer;

            feedback = "Godkendt!";

            bruger = new Bruger();

            @if (loggedInBruger.ErFormand())
            {
                NavManager.NavigateTo("/formandfrivillige");
            }
            else if (loggedInBruger.ErKoordinator())
            {
                NavManager.NavigateTo("/koordinatorstartside");
            }
            else
            {
                NavManager.NavigateTo("/frivilligstartside");
            }
        }
        else
        {
            feedback = "Forkert login, prøv igen.";
        }
    }

    private async Task<IEnumerable<Kompetence>> HentKompetencer(Bruger bruger)
    {
        List<Kompetence> alleKompetencer = await Http.GetFromJsonAsync<List<Kompetence>>("Kompetence/all");

        List<Kompetence> valgteKompetencer = new List<Kompetence>();

        foreach (var kompetence in alleKompetencer)
        {
            var kompetencer = await Http.GetFromJsonAsync<IEnumerable<Kompetence>>($"Kompetence/brugerkompetence?bruger_id={bruger.Bruger_Id}&kompetence_id={kompetence.Kompetence_Id}");

            valgteKompetencer.Add(kompetencer.First());
        }
        return valgteKompetencer;
    }

    private async Task<IEnumerable<Bruger>> TjekLogin(Bruger user)
    {
        return await Http.GetFromJsonAsync<IEnumerable<Bruger>>($"Bruger/tjeklogin?email={bruger.Email}&kode={bruger.Kode}");
    }
}