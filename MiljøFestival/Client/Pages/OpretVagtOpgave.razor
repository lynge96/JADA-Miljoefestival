@page "/opretVagtOpgave"
@using MiljøFestival.Shared.Models
@inject HttpClient Http
@inject MiljøFestival.Shared.Models.Bruger loggedInBruger

@if (opgaveListe == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-success" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (!loggedInBruger.ErKoordinator() && !loggedInBruger.ErFormand())
{
    <div class="alert alert-info col-md-3 mx-auto">
        <span class="bi bi-door-open-fill" aria-hidden="true"></span>
        <strong> Hov!</strong> Du skal være logget på en koordinator bruger for at se denne side.
    </div>
}
else
{
    <main class="row col-md-7 mx-auto">
        @*Opret Vagt*@
        <div class="opretvagtContainer col-md-6 px-4">
            <h2 class="my-3">Opret vagt</h2>

            <div class="form-floating mb-3">
                <input type="datetime" class="form-control" id="floatingStartdato" @bind="nyVagt.Start" placeholder="StartDato">
                <label for="floatingStartdato">Start</label>
            </div>

            <div class="form-floating mb-3">
                <input type="datetime" class="form-control" id="floatingSlutdato" @bind="nyVagt.Slut" placeholder="SlutDato">
                <label for="floatingSlutdato">Slut</label>
            </div>

            <div class="form-group mb-3">
                <label for="exampleFormControlSelect1" class="mb-2">Antal Vagter</label>
                <select class="form-select" @bind="antalVagter">
                    <option selected>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                </select>
            </div>

            <div class="form-group mb-5">
                <label for="exampleFormControlSelect1" class="mb-2">Opgave Type </label>
                <select class="form-select" @bind="nyVagt.Opgave">
                    <option selected>Vælg en opgave...</option>
                    @foreach (var item in opgaveListe)
                    {
                        <option>@item.Navn</option>
                    }
                </select>
            </div>

            <div class="d-grid gap-2 col-md-4 mx-auto my-3">
                <button class="btn btn-success" type="button" @onclick="() => OpretVagt(nyVagt)">Opret vagt</button>
            </div>

            @if (feedbackVagt == "Fejl!")
            {
                <div class="alert alert-warning">
                    <span class="bi bi-exclamation-circle-fill" aria-hidden="true"></span>
                    <strong>Hov!</strong> - Udfyld alle felterne rigtigt inden du trykker opret
                </div>

            }
            else if (feedbackVagt == "Succes!")
            {
                <div class="alert alert-success">
                    <span class="bi bi-check-circle-fill" aria-hidden="true"></span>
                    <strong>Succes!</strong> - Vagt(er) er nu oprettet
                </div>
            }
        </div>
        @*Opret Opgave*@
        <div class="opretopgaveContainer col-md-6 px-4">

            <h2 class="my-3">Opret opgave</h2>

            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="floatingType" @bind="nyOpgave.Navn" placeholder="OpgaveNavn">
                <label for="floatingType">Opgave navn</label>
            </div>

            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="floatingBeskrivelse" @bind="nyOpgave.Beskrivelse" placeholder="Beskrivelse">
                <label for="floatingBeskrivelse">Opgave beskrivelse</label>
            </div>

            <div class="form-group mb-3">
                <label for="exampleFormControlSelect1" class="mb-2">Start status:</label>
                <select class="form-select" @bind="nyOpgave.Status">
                    <option selected hdden>Vælg en status...</option>
                    @foreach (var status in status)
                    {
                        <option>@status</option>
                    }
                </select>
            </div>

            <div class="form-group mb-5">
                <label for="exampleFormControlSelect1" class="mb-2">Tilknyttet team:</label>
                <select class="form-select" @bind="nyOpgave.Team">
                    <option selected>Vælg et team...</option>
                    @foreach (var team in teams)
                    {
                        <option>@team</option>
                    }
                </select>
            </div>

            <div class="d-grid gap-2 col-md-4 mx-auto my-3">
                <button class="btn btn-success" type="button" @onclick="() => OpretOpgave(nyOpgave)">Opret opgave</button>
            </div>

            @if (feedbackOpgave == "Fejl!")
            {
                <div class="alert alert-warning">
                    <span class="bi bi-exclamation-circle-fill" aria-hidden="true"></span>
                    <strong>Hov!</strong> - Udfyld alle felterne rigtigt inden du trykker opret
                </div>

            }
            else if (feedbackOpgave == "Succes!")
            {
                <div class="alert alert-success">
                    <span class="bi bi-check-circle-fill" aria-hidden="true"></span>
                    <strong>Succes!</strong> - Opgave er nu oprettet
                </div>
            }
        </div>
    </main>
}

@code {
    private Vagt nyVagt = new Vagt();
    private Opgave nyOpgave = new Opgave();
    private List<Opgave> opgaveListe;
    private int antalVagter = 1;
    private List<string> status;
    private List<string> teams;
    private string feedbackVagt = string.Empty;
    private string feedbackOpgave = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        opgaveListe = await Http.GetFromJsonAsync<List<Opgave>>("Opgave/all");

        status = await Http.GetFromJsonAsync<List<string>>("Status/all");

        teams = await Http.GetFromJsonAsync<List<string>>("Team/all");

        nyVagt.Start = DateTime.UtcNow;

        nyVagt.Slut = DateTime.UtcNow;
    }

    private async Task OpretVagt(Vagt vagt)
    {
        if (vagt.Opgave == null || vagt.Start == DateTime.Today || vagt.Slut == DateTime.Today)
        {
            feedbackVagt = "Fejl!";

            return;
        }
        else
        {
            Opgave valgteOpgave = new Opgave();

            valgteOpgave = opgaveListe.Find(q => q.Navn == vagt.Opgave);

            vagt.Opgave_Id = valgteOpgave.Opgave_Id;

            for (int i = 1; i <= antalVagter; i++)
            {
                await Http.PostAsJsonAsync<Vagt>("Vagt/opret", vagt);
            }

            nyVagt = new Vagt();

            antalVagter = 1;

            nyVagt.Opgave = "Vælg en opgave...";

            nyVagt.Start = DateTime.UtcNow;

            nyVagt.Slut = DateTime.UtcNow;

            feedbackVagt = "Succes!";
        }
    }

    private async Task OpretOpgave(Opgave opgave)
    {
        if (opgave.Navn == null || opgave.Beskrivelse == null || opgave.Status == null || opgave.Team == null)
        {
            feedbackOpgave = "Fejl!";
        }
        else
        {
            await Http.PostAsJsonAsync<Opgave>("Opgave/opret", opgave);

            nyOpgave.Navn = string.Empty;

            nyOpgave.Beskrivelse = string.Empty;

            nyOpgave.Status = "Vælg en status...";

            nyOpgave.Team = "Vælg et team...";

            await OnInitializedAsync();

            feedbackOpgave = "Succes!";
        }
    }
}